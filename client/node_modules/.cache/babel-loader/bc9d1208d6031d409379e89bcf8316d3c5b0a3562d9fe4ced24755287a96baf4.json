{"ast":null,"code":"var _jsxFileName = \"/home/yakari144/UM/5ano/tese/StepwiseSource/client/src/components/Navigation.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphNode = ({\n  x,\n  y,\n  id,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"circle\", {\n  cx: x,\n  cy: y,\n  r: \"5\",\n  className: \"dot\",\n  id: \"dot_\" + id,\n  onClick: onClick\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n_c = GraphNode;\nconst Graph = ({\n  structure,\n  onNodeClick,\n  properties\n}) => {\n  const length = structure.length;\n  const height = calcHeight(structure);\n  let r = calcZoom(length, height);\n  function handleFork(array, x, y, properties) {\n    let l = array.length;\n    // calculate the integer division of the length of the array\n    let half = l / 2;\n    let nodesRendered = [];\n    for (let j = 0; j < l; j++) {\n      let place = j - half + 0.5;\n      const new_nodes = calculateNodes(array[j], x, y + properties.varY * place);\n      nodesRendered = nodesRendered.concat(new_nodes);\n    }\n    return nodesRendered;\n  }\n  const calculateNodes = (nodes, x, y) => {\n    // Recursive function to render nodes and paths\n    let nodesRendered = [];\n    for (let i = 0; i < nodes.length; i++) {\n      if (Array.isArray(nodes[i])) {\n        const nds = handleFork(nodes[i], x, y, properties);\n        nodesRendered = nodesRendered.concat(nds);\n        // get the node with the maximum x value\n        let max_x = 0;\n        for (let j = 0; j < nds.length; j++) {\n          let node = nds[j];\n          let x = node.x;\n          if (x > max_x) {\n            max_x = x;\n          }\n        }\n        x = max_x + properties.varX;\n      } else {\n        const node = nodes[i];\n        nodesRendered.push({\n          id: node,\n          x: x,\n          y: y\n        });\n        x += properties.varX;\n      }\n    }\n    return nodesRendered;\n  };\n  const renderNodes = nodes => {\n    // get the nodes to render\n    const nodesToRender = calculateNodes(nodes, properties.startX, properties.startY);\n    return nodesToRender.map(node => /*#__PURE__*/_jsxDEV(GraphNode, {\n      x: node.x,\n      y: node.y,\n      id: \"dot_\" + node.id,\n      onClick: () => onNodeClick(node.id)\n    }, node.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"100%\",\n    height: \"100%\",\n    className: \"graph\",\n    children: renderNodes(structure, properties.startX, properties.startY)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Graph;\nfunction calcHeight(structure) {\n  let st = [];\n  let height = 0;\n  for (let i = 0; i < structure.length; i++) {\n    if (Array.isArray(structure[i])) {\n      let new_h = structure[i].length;\n      for (let j = 0; j < structure[i].length; j++) {\n        new_h += calcHeight(structure[i][j]);\n      }\n      height = new_h;\n    }\n    st.push(height);\n  }\n  // return the maximum height in the array\n  return Math.max(...st);\n}\nfunction calcZoom(length, height) {\n  return 1;\n}\nfunction getLasts(order) {\n  // return the list of last slides\n  let lasts = [];\n  let l = order[order.length - 1];\n  if (Array.isArray(l)) {\n    for (let j = 0; j < l.length; j++) {\n      lasts = lasts.concat(getLasts(l[j]));\n    }\n  } else {\n    lasts = [l];\n  }\n  return lasts;\n}\nfunction getPrevious(order, currentSlide) {\n  // return the list of immediate previous slides\n  let previous = [];\n  for (let i = 0; i < order.length; i++) {\n    if (Array.isArray(order[i])) {\n      pr = [];\n      for (let j = 0; j < order[i].length; j++) {\n        p = getPrevious(order[i][j], currentSlide);\n        if (p.length > 0) {\n          return p;\n        } else {\n          pr.extend(getLasts(order[i][j]));\n        }\n      }\n      previous = pr;\n    } else {\n      if (order[i] === currentSlide) {\n        return previous;\n      }\n      previous = [order[i]];\n    }\n  }\n}\nconst GraphApp = ({\n  order,\n  slideChanger\n}) => {\n  let properties = {\n    startX: 20,\n    startY: 20,\n    varX: 30,\n    varY: 20\n  };\n  return /*#__PURE__*/_jsxDEV(Graph, {\n    structure: order,\n    onNodeClick: nodeId => slideChanger(nodeId),\n    properties: properties\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_c3 = GraphApp;\nfunction Navigation({\n  order,\n  slideChanger\n}) {\n  console.log(\"Previous of\", order[5], \"is\", getPrevious(order, order[0]));\n  // JSX: JavaScript XML\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"left\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"prev\",\n          onClick: () => {\n            slideChanger(-1);\n          },\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"middle\",\n        nota: \"InsertNavGraph\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-container\",\n          children: /*#__PURE__*/_jsxDEV(GraphApp, {\n            order: order,\n            slideChanger: slideChanger\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"right\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"next\",\n          onClick: () => {\n            slideChanger(1);\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 10\n  }, this);\n}\n_c4 = Navigation;\nexport default Navigation;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"GraphNode\");\n$RefreshReg$(_c2, \"Graph\");\n$RefreshReg$(_c3, \"GraphApp\");\n$RefreshReg$(_c4, \"Navigation\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GraphNode","x","y","id","onClick","cx","cy","r","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","Graph","structure","onNodeClick","properties","length","height","calcHeight","calcZoom","handleFork","array","l","half","nodesRendered","j","place","new_nodes","calculateNodes","varY","concat","nodes","i","Array","isArray","nds","max_x","node","varX","push","renderNodes","nodesToRender","startX","startY","map","width","children","_c2","st","new_h","Math","max","getLasts","order","lasts","getPrevious","currentSlide","previous","pr","p","extend","GraphApp","slideChanger","nodeId","_c3","Navigation","console","log","style","display","nota","_c4","$RefreshReg$"],"sources":["/home/yakari144/UM/5ano/tese/StepwiseSource/client/src/components/Navigation.js"],"sourcesContent":["import React from 'react';\n\nconst GraphNode = ({ x, y,id, onClick }) => (\n  <circle \n    cx={x}\n    cy={y} \n    r=\"5\" \n    className=\"dot\" \n    id={\"dot_\"+id}\n    onClick={onClick}\n  />\n);\n\nconst Graph = ({ structure, onNodeClick, properties }) => {\n  \n  const length = structure.length;\n  const height = calcHeight(structure);\n  let r = calcZoom(length, height);\n\n  function handleFork(array,x,y,properties) {\n    let l = array.length;\n    // calculate the integer division of the length of the array\n    let half = l/2 ;\n    let nodesRendered = [];\n    for (let j = 0; j < l; j++) {\n      let place = j - half + 0.5;\n      const new_nodes = calculateNodes(array[j], x, y + properties.varY*place);\n      nodesRendered = nodesRendered.concat(new_nodes);\n    }\n    return nodesRendered\n  }\n\n  const calculateNodes = (nodes, x, y) => {\n    // Recursive function to render nodes and paths\n    let nodesRendered = [];\n    for(let i = 0; i < nodes.length; i++) {\n      if (Array.isArray(nodes[i])) {\n        const nds = handleFork(nodes[i],x,y,properties);\n        nodesRendered = nodesRendered.concat(nds);\n        // get the node with the maximum x value\n        let max_x = 0;\n        for (let j = 0; j < nds.length; j++) {\n          let node = nds[j];\n          let x = node.x;\n          if (x > max_x) {\n            max_x = x;\n          }\n        }\n        x = max_x + properties.varX;\n      } else {\n        const node = nodes[i];\n        nodesRendered.push(\n          {\n            id: node,\n            x: x,\n            y: y\n          }\n        );\n        x += properties.varX;\n      }\n    }\n    return nodesRendered;\n  };\n\n  const renderNodes = (nodes) => {\n    // get the nodes to render\n    const nodesToRender = calculateNodes(nodes, properties.startX, properties.startY);\n\n    return nodesToRender.map((node) => (\n      <GraphNode\n        key={node.id}\n        x={node.x}\n        y={node.y}\n        id={\"dot_\"+node.id}\n        onClick={() => onNodeClick(node.id)}\n      />\n    ));\n  }\n\n  return (\n    <svg width=\"100%\" height=\"100%\" className=\"graph\">\n      {renderNodes(structure, properties.startX, properties.startY)}\n    </svg>\n  );\n};\n\nfunction calcHeight(structure) {\n  let st = [];\n  let height = 0;\n  for (let i = 0; i < structure.length; i++) {\n    if (Array.isArray(structure[i])) {\n      let new_h = structure[i].length;\n      for (let j = 0; j < structure[i].length; j++) {\n        new_h += calcHeight(structure[i][j]);\n      }\n      height = new_h\n    }\n    st.push(height);\n  }\n  // return the maximum height in the array\n  return Math.max(...st);\n}\n\nfunction calcZoom(length, height) {\n  return 1\n}\n\nfunction getLasts(order){\n  // return the list of last slides\n  let lasts = [];\n  let l = order[order.length-1];\n  if (Array.isArray(l)) {\n    for(let j = 0; j < l.length; j++) {\n      lasts = lasts.concat(getLasts(l[j]));\n    }\n  } else {\n    lasts = [l];\n  }\n  return lasts;\n}\n\nfunction getPrevious(order,currentSlide){\n  // return the list of immediate previous slides\n  let previous = [];\n  for (let i = 0; i < order.length; i++) {\n    if (Array.isArray(order[i])) {\n      pr = [];\n      for(let j = 0; j < order[i].length; j++) {\n        p = getPrevious(order[i][j],currentSlide);\n        if(p.length > 0){\n          return p;\n        }else{\n          pr.extend(getLasts(order[i][j]));\n        }\n      }\n      previous = pr;\n    } else {\n      if (order[i] === currentSlide) {\n        return previous;\n      }\n      previous = [order[i]];\n    }\n  }\n}\n\nconst GraphApp = ({order,slideChanger}) => {\n  let properties = {\n    startX: 20,\n    startY: 20,\n    varX: 30,\n    varY: 20,\n  }\n  return (\n    <Graph\n      structure={order}\n      onNodeClick={(nodeId) => slideChanger(nodeId)}\n      properties={properties}\n    />\n  );\n};\n\n\nfunction Navigation({order, slideChanger}) {\n  console.log(\"Previous of\", order[5], \"is\", getPrevious(order,order[0]));\n  // JSX: JavaScript XML\n  return <table style={{width:\"100%\"}}>\n    <tr style={{display:\"flex\"}}>\n      <td className=\"left\">\n        <span className=\"prev\" onClick={() => {slideChanger(-1)}}>Previous</span>\n      </td>\n      <td className=\"middle\" nota=\"InsertNavGraph\">\n        <div className=\"graph-container\">\n          <GraphApp order={order} slideChanger={slideChanger} />\n        </div>\n      </td>\n      <td className=\"right\"><span className=\"next\" onClick={() => {slideChanger(1)}} >Next</span></td>\n    </tr>\n  </table>\n}\n\nexport default Navigation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}