{"ast":null,"code":"var _jsxFileName = \"/home/yakari144/UM/5ano/tese/StepwiseSource/client/src/components/Navigation.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphNode = ({\n  x,\n  y,\n  id,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"circle\", {\n  cx: x,\n  cy: y,\n  r: \"5\",\n  className: \"dot\",\n  id: \"dot_\" + id,\n  onClick: onClick\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n_c = GraphNode;\nconst Graph = ({\n  structure,\n  onNodeClick,\n  properties\n}) => {\n  const length = structure.length;\n  const height = calcHeight(structure);\n  console.log(\"Height: \", height);\n  console.log(\"Length: \", length);\n  let r = calcZoom(length, height);\n  console.log(\"Zoom: \", r);\n  function handleFork(array, x, y, properties) {\n    let l = array.length;\n    // calculate the integer division of the length of the array\n    let half = l / 2;\n    let nodesRendered = [];\n    for (let j = 0; j < l; j++) {\n      let place = j - half + 0.5;\n      const new_nodes = calculateNodes(array[j], x + properties.varX, y + properties.varY * place);\n      nodesRendered = nodesRendered.concat(new_nodes);\n    }\n    return nodesRendered;\n  }\n  const calculateNodes = (nodes, x, y) => {\n    // Recursive function to render nodes and paths\n    let nodesRendered = [];\n    for (let i = 0; i < nodes.length; i++) {\n      if (Array.isArray(nodes[i])) {\n        const nds = handleFork(nodes[i], x, y, properties);\n        nodesRendered = nodesRendered.concat(nds);\n        // get the node with the maximum x value\n        let max_x = 0;\n        for (let j = 0; j < nds.length; j++) {\n          let node = nds[j];\n          let x = node.x;\n          if (x > max_x) {\n            max_x = x;\n          }\n        }\n        console.log(\"Max X: \", max_x);\n        x = max_x + properties.varX;\n      } else {\n        const node = nodes[i];\n        nodesRendered.push({\n          id: node,\n          x: x,\n          y: y\n        });\n        x += properties.varX;\n      }\n    }\n    return nodesRendered;\n  };\n  const renderNodes = nodes => {\n    // get the nodes to render\n    const nodesToRender = calculateNodes(nodes, properties.startX, properties.startY);\n    return nodesToRender.map(node => /*#__PURE__*/_jsxDEV(GraphNode, {\n      x: node.x,\n      y: node.y,\n      id: \"dot_\" + node.id,\n      onClick: () => onNodeClick(node.id)\n    }, node.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"100%\",\n    height: \"100%\",\n    className: \"graph\",\n    children: renderNodes(structure, properties.startX, properties.startY)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Graph;\nfunction calcHeight(structure) {\n  let st = [];\n  let height = 0;\n  for (let i = 0; i < structure.length; i++) {\n    if (Array.isArray(structure[i])) {\n      let new_h = structure[i].length;\n      for (let j = 0; j < structure[i].length; j++) {\n        new_h += calcHeight(structure[i][j]);\n      }\n      height = new_h;\n    }\n    st.push(height);\n  }\n  // return the maximum height in the array\n  return Math.max(...st);\n}\nfunction calcZoom(length, height) {\n  return 1;\n}\nfunction getPrevious(order, currentSlide) {\n  // return the list of immediate previous slides\n  let previous = [];\n  for (let i = 0; i < order.length; i++) {\n    if (Array.isArray(order[i])) {\n      pr = [];\n      for (let j = 0; j < order[i].length; j++) {\n        pr = getPrevious(order[i][j], currentSlide);\n      }\n    } else {\n      if (order[i] === currentSlide) {\n        return previous;\n      }\n      previous = [order[i]];\n    }\n  }\n}\nconst GraphApp = ({\n  order,\n  slideChanger\n}) => {\n  let properties = {\n    startX: 20,\n    startY: 20,\n    varX: 30,\n    varY: 20\n  };\n  return /*#__PURE__*/_jsxDEV(Graph, {\n    structure: order,\n    onNodeClick: nodeId => slideChanger(nodeId),\n    properties: properties\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_c3 = GraphApp;\nfunction Navigation({\n  order,\n  slideChanger\n}) {\n  // JSX: JavaScript XML\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"left\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"prev\",\n          onClick: () => {\n            slideChanger(-1);\n          },\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"middle\",\n        nota: \"InsertNavGraph\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-container\",\n          children: /*#__PURE__*/_jsxDEV(GraphApp, {\n            order: order,\n            slideChanger: slideChanger\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"right\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"next\",\n          onClick: () => {\n            slideChanger(1);\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 10\n  }, this);\n}\n_c4 = Navigation;\nexport default Navigation;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"GraphNode\");\n$RefreshReg$(_c2, \"Graph\");\n$RefreshReg$(_c3, \"GraphApp\");\n$RefreshReg$(_c4, \"Navigation\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GraphNode","x","y","id","onClick","cx","cy","r","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","Graph","structure","onNodeClick","properties","length","height","calcHeight","console","log","calcZoom","handleFork","array","l","half","nodesRendered","j","place","new_nodes","calculateNodes","varX","varY","concat","nodes","i","Array","isArray","nds","max_x","node","push","renderNodes","nodesToRender","startX","startY","map","width","children","_c2","st","new_h","Math","max","getPrevious","order","currentSlide","previous","pr","GraphApp","slideChanger","nodeId","_c3","Navigation","style","display","nota","_c4","$RefreshReg$"],"sources":["/home/yakari144/UM/5ano/tese/StepwiseSource/client/src/components/Navigation.js"],"sourcesContent":["import React from 'react';\n\nconst GraphNode = ({ x, y,id, onClick }) => (\n  <circle \n    cx={x}\n    cy={y} \n    r=\"5\" \n    className=\"dot\" \n    id={\"dot_\"+id}\n    onClick={onClick}\n  />\n);\n\nconst Graph = ({ structure, onNodeClick, properties }) => {\n  \n  const length = structure.length;\n  const height = calcHeight(structure);\n  console.log(\"Height: \", height);\n  console.log(\"Length: \", length);\n  let r = calcZoom(length, height);\n  console.log(\"Zoom: \", r);\n\n  function handleFork(array,x,y,properties) {\n    let l = array.length;\n    // calculate the integer division of the length of the array\n    let half = l/2 ;\n    let nodesRendered = [];\n    for (let j = 0; j < l; j++) {\n      let place = j - half + 0.5;\n      const new_nodes = calculateNodes(array[j], x + properties.varX, y + properties.varY*place);\n      nodesRendered = nodesRendered.concat(new_nodes);\n    }\n    return nodesRendered\n  }\n\n  const calculateNodes = (nodes, x, y) => {\n    // Recursive function to render nodes and paths\n    let nodesRendered = [];\n    for(let i = 0; i < nodes.length; i++) {\n      if (Array.isArray(nodes[i])) {\n        const nds = handleFork(nodes[i],x,y,properties);\n        nodesRendered = nodesRendered.concat(nds);\n        // get the node with the maximum x value\n        let max_x = 0;\n        for (let j = 0; j < nds.length; j++) {\n          let node = nds[j];\n          let x = node.x;\n          if (x > max_x) {\n            max_x = x;\n          }\n        }\n        console.log(\"Max X: \", max_x);\n        x = max_x + properties.varX;\n      } else {\n        const node = nodes[i];\n        nodesRendered.push(\n          {\n            id: node,\n            x: x,\n            y: y\n          }\n        );\n        x += properties.varX;\n      }\n    }\n    return nodesRendered;\n  };\n\n  const renderNodes = (nodes) => {\n    // get the nodes to render\n    const nodesToRender = calculateNodes(nodes, properties.startX, properties.startY);\n\n    return nodesToRender.map((node) => (\n      <GraphNode\n        key={node.id}\n        x={node.x}\n        y={node.y}\n        id={\"dot_\"+node.id}\n        onClick={() => onNodeClick(node.id)}\n      />\n    ));\n  }\n\n  return (\n    <svg width=\"100%\" height=\"100%\" className=\"graph\">\n      {renderNodes(structure, properties.startX, properties.startY)}\n    </svg>\n  );\n};\n\nfunction calcHeight(structure) {\n  let st = [];\n  let height = 0;\n  for (let i = 0; i < structure.length; i++) {\n    if (Array.isArray(structure[i])) {\n      let new_h = structure[i].length;\n      for (let j = 0; j < structure[i].length; j++) {\n        new_h += calcHeight(structure[i][j]);\n      }\n      height = new_h\n    }\n    st.push(height);\n  }\n  // return the maximum height in the array\n  return Math.max(...st);\n}\n\nfunction calcZoom(length, height) {\n  return 1\n}\n\nfunction getPrevious(order,currentSlide){\n  // return the list of immediate previous slides\n  let previous = [];\n  for (let i = 0; i < order.length; i++) {\n    if (Array.isArray(order[i])) {\n      pr = []\n      for(let j = 0; j < order[i].length; j++) {\n        pr = getPrevious(order[i][j],currentSlide);\n      }\n    } else {\n      if (order[i] === currentSlide) {\n        return previous;\n      }\n      previous = [order[i]];\n    }\n  }\n}\n\nconst GraphApp = ({order,slideChanger}) => {\n  let properties = {\n    startX: 20,\n    startY: 20,\n    varX: 30,\n    varY: 20,\n  }\n  return (\n    <Graph\n      structure={order}\n      onNodeClick={(nodeId) => slideChanger(nodeId)}\n      properties={properties}\n    />\n  );\n};\n\n\nfunction Navigation({order, slideChanger}) {\n  // JSX: JavaScript XML\n  return <table style={{width:\"100%\"}}>\n    <tr style={{display:\"flex\"}}>\n      <td className=\"left\">\n        <span className=\"prev\" onClick={() => {slideChanger(-1)}}>Previous</span>\n      </td>\n      <td className=\"middle\" nota=\"InsertNavGraph\">\n        <div className=\"graph-container\">\n          <GraphApp order={order} slideChanger={slideChanger} />\n        </div>\n      </td>\n      <td className=\"right\"><span className=\"next\" onClick={() => {slideChanger(1)}} >Next</span></td>\n    </tr>\n  </table>\n}\n\nexport default Navigation;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,CAAC;EAAEC,CAAC;EAACC,EAAE;EAAEC;AAAQ,CAAC,kBACrCL,OAAA;EACEM,EAAE,EAAEJ,CAAE;EACNK,EAAE,EAAEJ,CAAE;EACNK,CAAC,EAAC,GAAG;EACLC,SAAS,EAAC,KAAK;EACfL,EAAE,EAAE,MAAM,GAACA,EAAG;EACdC,OAAO,EAAEA;AAAQ;EAAAK,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAClB,CACF;AAACC,EAAA,GATIb,SAAS;AAWf,MAAMc,KAAK,GAAGA,CAAC;EAAEC,SAAS;EAAEC,WAAW;EAAEC;AAAW,CAAC,KAAK;EAExD,MAAMC,MAAM,GAAGH,SAAS,CAACG,MAAM;EAC/B,MAAMC,MAAM,GAAGC,UAAU,CAACL,SAAS,CAAC;EACpCM,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,MAAM,CAAC;EAC/BE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEJ,MAAM,CAAC;EAC/B,IAAIX,CAAC,GAAGgB,QAAQ,CAACL,MAAM,EAAEC,MAAM,CAAC;EAChCE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEf,CAAC,CAAC;EAExB,SAASiB,UAAUA,CAACC,KAAK,EAACxB,CAAC,EAACC,CAAC,EAACe,UAAU,EAAE;IACxC,IAAIS,CAAC,GAAGD,KAAK,CAACP,MAAM;IACpB;IACA,IAAIS,IAAI,GAAGD,CAAC,GAAC,CAAC;IACd,IAAIE,aAAa,GAAG,EAAE;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,CAAC,EAAEG,CAAC,EAAE,EAAE;MAC1B,IAAIC,KAAK,GAAGD,CAAC,GAAGF,IAAI,GAAG,GAAG;MAC1B,MAAMI,SAAS,GAAGC,cAAc,CAACP,KAAK,CAACI,CAAC,CAAC,EAAE5B,CAAC,GAAGgB,UAAU,CAACgB,IAAI,EAAE/B,CAAC,GAAGe,UAAU,CAACiB,IAAI,GAACJ,KAAK,CAAC;MAC1FF,aAAa,GAAGA,aAAa,CAACO,MAAM,CAACJ,SAAS,CAAC;IACjD;IACA,OAAOH,aAAa;EACtB;EAEA,MAAMI,cAAc,GAAGA,CAACI,KAAK,EAAEnC,CAAC,EAAEC,CAAC,KAAK;IACtC;IACA,IAAI0B,aAAa,GAAG,EAAE;IACtB,KAAI,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAAClB,MAAM,EAAEmB,CAAC,EAAE,EAAE;MACpC,IAAIC,KAAK,CAACC,OAAO,CAACH,KAAK,CAACC,CAAC,CAAC,CAAC,EAAE;QAC3B,MAAMG,GAAG,GAAGhB,UAAU,CAACY,KAAK,CAACC,CAAC,CAAC,EAACpC,CAAC,EAACC,CAAC,EAACe,UAAU,CAAC;QAC/CW,aAAa,GAAGA,aAAa,CAACO,MAAM,CAACK,GAAG,CAAC;QACzC;QACA,IAAIC,KAAK,GAAG,CAAC;QACb,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGW,GAAG,CAACtB,MAAM,EAAEW,CAAC,EAAE,EAAE;UACnC,IAAIa,IAAI,GAAGF,GAAG,CAACX,CAAC,CAAC;UACjB,IAAI5B,CAAC,GAAGyC,IAAI,CAACzC,CAAC;UACd,IAAIA,CAAC,GAAGwC,KAAK,EAAE;YACbA,KAAK,GAAGxC,CAAC;UACX;QACF;QACAoB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEmB,KAAK,CAAC;QAC7BxC,CAAC,GAAGwC,KAAK,GAAGxB,UAAU,CAACgB,IAAI;MAC7B,CAAC,MAAM;QACL,MAAMS,IAAI,GAAGN,KAAK,CAACC,CAAC,CAAC;QACrBT,aAAa,CAACe,IAAI,CAChB;UACExC,EAAE,EAAEuC,IAAI;UACRzC,CAAC,EAAEA,CAAC;UACJC,CAAC,EAAEA;QACL,CACF,CAAC;QACDD,CAAC,IAAIgB,UAAU,CAACgB,IAAI;MACtB;IACF;IACA,OAAOL,aAAa;EACtB,CAAC;EAED,MAAMgB,WAAW,GAAIR,KAAK,IAAK;IAC7B;IACA,MAAMS,aAAa,GAAGb,cAAc,CAACI,KAAK,EAAEnB,UAAU,CAAC6B,MAAM,EAAE7B,UAAU,CAAC8B,MAAM,CAAC;IAEjF,OAAOF,aAAa,CAACG,GAAG,CAAEN,IAAI,iBAC5B3C,OAAA,CAACC,SAAS;MAERC,CAAC,EAAEyC,IAAI,CAACzC,CAAE;MACVC,CAAC,EAAEwC,IAAI,CAACxC,CAAE;MACVC,EAAE,EAAE,MAAM,GAACuC,IAAI,CAACvC,EAAG;MACnBC,OAAO,EAAEA,CAAA,KAAMY,WAAW,CAAC0B,IAAI,CAACvC,EAAE;IAAE,GAJ/BuC,IAAI,CAACvC,EAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKb,CACF,CAAC;EACJ,CAAC;EAED,oBACEb,OAAA;IAAKkD,KAAK,EAAC,MAAM;IAAC9B,MAAM,EAAC,MAAM;IAACX,SAAS,EAAC,OAAO;IAAA0C,QAAA,EAC9CN,WAAW,CAAC7B,SAAS,EAAEE,UAAU,CAAC6B,MAAM,EAAE7B,UAAU,CAAC8B,MAAM;EAAC;IAAAtC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV,CAAC;AAACuC,GAAA,GA3EIrC,KAAK;AA6EX,SAASM,UAAUA,CAACL,SAAS,EAAE;EAC7B,IAAIqC,EAAE,GAAG,EAAE;EACX,IAAIjC,MAAM,GAAG,CAAC;EACd,KAAK,IAAIkB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtB,SAAS,CAACG,MAAM,EAAEmB,CAAC,EAAE,EAAE;IACzC,IAAIC,KAAK,CAACC,OAAO,CAACxB,SAAS,CAACsB,CAAC,CAAC,CAAC,EAAE;MAC/B,IAAIgB,KAAK,GAAGtC,SAAS,CAACsB,CAAC,CAAC,CAACnB,MAAM;MAC/B,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,SAAS,CAACsB,CAAC,CAAC,CAACnB,MAAM,EAAEW,CAAC,EAAE,EAAE;QAC5CwB,KAAK,IAAIjC,UAAU,CAACL,SAAS,CAACsB,CAAC,CAAC,CAACR,CAAC,CAAC,CAAC;MACtC;MACAV,MAAM,GAAGkC,KAAK;IAChB;IACAD,EAAE,CAACT,IAAI,CAACxB,MAAM,CAAC;EACjB;EACA;EACA,OAAOmC,IAAI,CAACC,GAAG,CAAC,GAAGH,EAAE,CAAC;AACxB;AAEA,SAAS7B,QAAQA,CAACL,MAAM,EAAEC,MAAM,EAAE;EAChC,OAAO,CAAC;AACV;AAEA,SAASqC,WAAWA,CAACC,KAAK,EAACC,YAAY,EAAC;EACtC;EACA,IAAIC,QAAQ,GAAG,EAAE;EACjB,KAAK,IAAItB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoB,KAAK,CAACvC,MAAM,EAAEmB,CAAC,EAAE,EAAE;IACrC,IAAIC,KAAK,CAACC,OAAO,CAACkB,KAAK,CAACpB,CAAC,CAAC,CAAC,EAAE;MAC3BuB,EAAE,GAAG,EAAE;MACP,KAAI,IAAI/B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4B,KAAK,CAACpB,CAAC,CAAC,CAACnB,MAAM,EAAEW,CAAC,EAAE,EAAE;QACvC+B,EAAE,GAAGJ,WAAW,CAACC,KAAK,CAACpB,CAAC,CAAC,CAACR,CAAC,CAAC,EAAC6B,YAAY,CAAC;MAC5C;IACF,CAAC,MAAM;MACL,IAAID,KAAK,CAACpB,CAAC,CAAC,KAAKqB,YAAY,EAAE;QAC7B,OAAOC,QAAQ;MACjB;MACAA,QAAQ,GAAG,CAACF,KAAK,CAACpB,CAAC,CAAC,CAAC;IACvB;EACF;AACF;AAEA,MAAMwB,QAAQ,GAAGA,CAAC;EAACJ,KAAK;EAACK;AAAY,CAAC,KAAK;EACzC,IAAI7C,UAAU,GAAG;IACf6B,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVd,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE;EACR,CAAC;EACD,oBACEnC,OAAA,CAACe,KAAK;IACJC,SAAS,EAAE0C,KAAM;IACjBzC,WAAW,EAAG+C,MAAM,IAAKD,YAAY,CAACC,MAAM,CAAE;IAC9C9C,UAAU,EAAEA;EAAW;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEN,CAAC;AAACoD,GAAA,GAdIH,QAAQ;AAiBd,SAASI,UAAUA,CAAC;EAACR,KAAK;EAAEK;AAAY,CAAC,EAAE;EACzC;EACA,oBAAO/D,OAAA;IAAOmE,KAAK,EAAE;MAACjB,KAAK,EAAC;IAAM,CAAE;IAAAC,QAAA,eAClCnD,OAAA;MAAImE,KAAK,EAAE;QAACC,OAAO,EAAC;MAAM,CAAE;MAAAjB,QAAA,gBAC1BnD,OAAA;QAAIS,SAAS,EAAC,MAAM;QAAA0C,QAAA,eAClBnD,OAAA;UAAMS,SAAS,EAAC,MAAM;UAACJ,OAAO,EAAEA,CAAA,KAAM;YAAC0D,YAAY,CAAC,CAAC,CAAC,CAAC;UAAA,CAAE;UAAAZ,QAAA,EAAC;QAAQ;UAAAzC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC,eACLb,OAAA;QAAIS,SAAS,EAAC,QAAQ;QAAC4D,IAAI,EAAC,gBAAgB;QAAAlB,QAAA,eAC1CnD,OAAA;UAAKS,SAAS,EAAC,iBAAiB;UAAA0C,QAAA,eAC9BnD,OAAA,CAAC8D,QAAQ;YAACJ,KAAK,EAAEA,KAAM;YAACK,YAAY,EAAEA;UAAa;YAAArD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACLb,OAAA;QAAIS,SAAS,EAAC,OAAO;QAAA0C,QAAA,eAACnD,OAAA;UAAMS,SAAS,EAAC,MAAM;UAACJ,OAAO,EAAEA,CAAA,KAAM;YAAC0D,YAAY,CAAC,CAAC,CAAC;UAAA,CAAE;UAAAZ,QAAA,EAAE;QAAI;UAAAzC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9F;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AACV;AAACyD,GAAA,GAfQJ,UAAU;AAiBnB,eAAeA,UAAU;AAAC,IAAApD,EAAA,EAAAsC,GAAA,EAAAa,GAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAzD,EAAA;AAAAyD,YAAA,CAAAnB,GAAA;AAAAmB,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}