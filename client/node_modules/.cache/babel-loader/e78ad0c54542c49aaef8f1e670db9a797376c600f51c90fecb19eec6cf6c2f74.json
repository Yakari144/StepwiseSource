{"ast":null,"code":"var _jsxFileName = \"/home/yakari144/UM/5ano/tese/StepwiseSource/client/src/components/Navigation.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphNode = ({\n  x,\n  y,\n  id,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"circle\", {\n  cx: x,\n  cy: y,\n  r: \"5\",\n  className: \"dot\",\n  id: \"dot_\" + id,\n  onClick: onClick\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n_c = GraphNode;\nconst Graph = ({\n  structure,\n  onNodeClick,\n  properties\n}) => {\n  const length = structure.length;\n  const height = calcHeight(structure);\n  console.log(\"Height: \", height);\n  console.log(\"Length: \", length);\n  let r = calcZoom(length, height);\n  console.log(\"Zoom: \", r);\n  function handleFork(array, x, y, properties) {\n    let l = array[i].length;\n    // calculate the integer division of the length of the array\n    let half = l / 2;\n    for (let j = 0; j < l; j++) {\n      let place = j - half + 0.5;\n      const new_nodes = renderNodes(nodes[i][j], x + properties.varX, y + properties.varY * place);\n      nodesRendered = nodesRendered.concat(new_nodes);\n    }\n    return nodesRendered;\n  }\n  const renderNodes = (nodes, x, y) => {\n    // Recursive function to render nodes and paths\n    let nodesRendered = [];\n    for (let i = 0; i < nodes.length; i++) {\n      if (Array.isArray(nodes[i])) {\n        const nodes = handleFork(nodes[i], x, y, properties);\n        nodesRendered = nodesRendered.concat(nodes);\n      } else {\n        const node = nodes[i];\n        nodesRendered.push( /*#__PURE__*/_jsxDEV(GraphNode, {\n          x: x,\n          y: y,\n          id: node,\n          onClick: onNodeClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return nodesRendered;\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"100%\",\n    height: \"100%\",\n    className: \"graph\",\n    children: renderNodes(structure, startX, startY)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Graph;\nfunction calcHeight(structure) {\n  let st = [];\n  let height = 0;\n  for (let i = 0; i < structure.length; i++) {\n    if (Array.isArray(structure[i])) {\n      new_h = structure[i].length;\n      for (let j = 0; j < structure[i].length; j++) {\n        new_h += calcHeight(structure[i][j]);\n      }\n      height = new_h;\n    }\n    st.push(height);\n  }\n  // return the maximum height in the array\n  return Math.max(...st);\n}\nfunction calcZoom(length, height) {\n  return 1;\n}\nconst GraphApp = () => {\n  const graphStructure = [\"N1\", \"N2\", [[\"N3\", \"N4\", \"N5\"], [\"N5\"]], [[\"N6\"], [\"N7\"]], \"N8\"];\n  let properties = {\n    startX: 0,\n    startY: 0,\n    varX: 30,\n    varY: 20\n  };\n  return /*#__PURE__*/_jsxDEV(Graph, {\n    structure: graphStructure,\n    onNodeClick: nodeId => setSelectedNode(nodeId),\n    properties: properties\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_c3 = GraphApp;\nfunction Navigation({\n  slideChanger\n}) {\n  // JSX: JavaScript XML\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"left\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"prev\",\n          onClick: () => {\n            slideChanger(-1);\n          },\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"middle\",\n        nota: \"InsertNavGraph\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-container\",\n          children: /*#__PURE__*/_jsxDEV(GraphApp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"right\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"next\",\n          onClick: () => {\n            slideChanger(1);\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 12\n  }, this);\n}\n_c4 = Navigation;\nexport default Navigation;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"GraphNode\");\n$RefreshReg$(_c2, \"Graph\");\n$RefreshReg$(_c3, \"GraphApp\");\n$RefreshReg$(_c4, \"Navigation\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GraphNode","x","y","id","onClick","cx","cy","r","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","Graph","structure","onNodeClick","properties","length","height","calcHeight","console","log","calcZoom","handleFork","array","l","i","half","j","place","new_nodes","renderNodes","nodes","varX","varY","nodesRendered","concat","Array","isArray","node","push","width","children","startX","startY","_c2","st","new_h","Math","max","GraphApp","graphStructure","nodeId","setSelectedNode","_c3","Navigation","slideChanger","style","display","nota","_c4","$RefreshReg$"],"sources":["/home/yakari144/UM/5ano/tese/StepwiseSource/client/src/components/Navigation.js"],"sourcesContent":["import React from 'react';\n\nconst GraphNode = ({ x, y,id, onClick }) => (\n  <circle \n    cx={x}\n    cy={y} \n    r=\"5\" \n    className=\"dot\" \n    id={\"dot_\"+id}\n    onClick={onClick}\n  />\n);\n\nconst Graph = ({ structure, onNodeClick, properties }) => {\n  \n  const length = structure.length;\n  const height = calcHeight(structure);\n  console.log(\"Height: \", height);\n  console.log(\"Length: \", length);\n  let r = calcZoom(length, height);\n  console.log(\"Zoom: \", r);\n\n  function handleFork(array,x,y,properties) {\n    let l = array[i].length;\n    // calculate the integer division of the length of the array\n    let half = l/2 ;\n    for (let j = 0; j < l; j++) {\n      let place = j - half + 0.5;\n      const new_nodes = renderNodes(nodes[i][j], x + properties.varX, y + properties.varY*place);\n      nodesRendered = nodesRendered.concat(new_nodes);\n    }\n    return nodesRendered\n  }\n\n  const renderNodes = (nodes, x, y) => {\n    // Recursive function to render nodes and paths\n    let nodesRendered = [];\n    for(let i = 0; i < nodes.length; i++) {\n      if (Array.isArray(nodes[i])) {\n        const nodes = handleFork(nodes[i],x,y,properties);\n        nodesRendered = nodesRendered.concat(nodes);\n      } else {\n        const node = nodes[i];\n        nodesRendered.push(\n          <GraphNode\n            x={x}\n            y={y}\n            id={node}\n            onClick={onNodeClick}\n          />\n        );\n      }\n    }\n    return nodesRendered;\n  };\n\n  return (\n    <svg width=\"100%\" height=\"100%\" className=\"graph\">\n      {renderNodes(structure, startX, startY)}\n    </svg>\n  );\n};\n\nfunction calcHeight(structure) {\n  let st = [];\n  let height = 0;\n  for (let i = 0; i < structure.length; i++) {\n    if (Array.isArray(structure[i])) {\n      new_h = structure[i].length;\n      for (let j = 0; j < structure[i].length; j++) {\n        new_h += calcHeight(structure[i][j]);\n      }\n      height = new_h\n    }\n    st.push(height);\n  }\n  // return the maximum height in the array\n  return Math.max(...st);\n}\n\nfunction calcZoom(length, height) {\n  return 1\n}\n\nconst GraphApp = () => {\n  const graphStructure = [\"N1\", \"N2\", [[\"N3\", \"N4\", \"N5\"], [\"N5\"]] , [[\"N6\"],[\"N7\"]] , \"N8\"];\n\n  let properties = {\n    startX: 0,\n    startY: 0,\n    varX: 30,\n    varY: 20,\n  }\n  return (\n    <Graph\n      structure={graphStructure}\n      onNodeClick={(nodeId) => setSelectedNode(nodeId)}\n      properties={properties}\n    />\n  );\n};\n\n\nfunction Navigation({slideChanger}) {\n    // JSX: JavaScript XML\n    return <table style={{width:\"100%\"}}>\n    <tr style={{display:\"flex\"}}>\n      <td className=\"left\">\n        <span className=\"prev\" onClick={() => {slideChanger(-1)}}>Previous</span>\n      </td>\n      <td className=\"middle\" nota=\"InsertNavGraph\">\n        <div className=\"graph-container\">\n          <GraphApp />\n        </div>\n      </td>\n      <td className=\"right\"><span className=\"next\" onClick={() => {slideChanger(1)}} >Next</span></td>\n    </tr>\n  </table>\n}\n\nexport default Navigation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}