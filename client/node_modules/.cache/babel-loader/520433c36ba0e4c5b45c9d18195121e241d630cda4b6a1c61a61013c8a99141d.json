{"ast":null,"code":"var _jsxFileName = \"/home/yakari144/UM/5ano/tese/StepwiseSource/client/src/pages/Demo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Annotations from '../components/Annotation';\nimport SourceCode from '../components/SourceCode';\nimport Navigation from '../components/Navigation';\nimport Loading from '../components/Loading';\nimport StyledHTML from '../components/StyledHTML';\nimport './Demo.css';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost\";\nconst EXPRESS_PORT = process.env.REACT_APP_EXPRESS_PORT || \"50741\";\nfunction Demo() {\n  _s();\n  var [data, setData] = useState({\n    \"variables\": [],\n    \"slides\": [],\n    \"order\": []\n  });\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  var [currentSlide, setCurrentSlide] = useState(3);\n  var [slideIdxDict, setSlideIdxDict] = useState({});\n  useEffect(() => {\n    fetch(BASE_URL + \":\" + EXPRESS_PORT + \"/api/\" + id).then(res => res.json()).then(info => {\n      if (!info.slides) {\n        navigate(\"/error\");\n      } else {\n        // set the data to the info received\n        setData(info);\n      }\n    }).catch(error => console.log(error.message));\n  }, [id, navigate]);\n\n  // Set the slideIdxDict and the first slide when data changes\n  useEffect(() => {\n    const defSlideIdxDict = () => {\n      let sID = {};\n      for (let i = 0; i < data.slides.length; i++) {\n        sID[data.slides[i].idSlide] = i;\n      }\n      return sID;\n    };\n    if (data && data.slides) {\n      setSlideIdxDict(defSlideIdxDict());\n    }\n  }, [data]); // Trigger this effect when `data` changes\n\n  // Set the first slide of the presentation according to the order\n  useEffect(() => {\n    const setFirstSlide = order => {\n      if (order && order[0]) {\n        if (typeof order[0] === \"string\") {\n          setCurrentSlide(slideIdxDict[order[0]]);\n          console.log(\"First slide: \", order[0], slideIdxDict);\n        } else {\n          setFirstSlide(order[0][0]);\n        }\n      }\n    };\n    setFirstSlide(data.order);\n  }, [data]);\n  const rearrangeOrder = order => {\n    const jsonString = order.replace(/'/g, '\"');\n    const dataStructure = JSON.parse(jsonString);\n    data.order = dataStructure;\n    setData(data);\n    setFirstSlide(dataStructure);\n  };\n  const handleSlideChange = slideIndex => {\n    let r = slideIndex + currentSlide;\n    if (r < 0) {\n      r = 0;\n    } else if (r >= data.slides.length) {\n      r = data.slides.length - 1;\n    }\n    setCurrentSlide(r);\n  };\n  const setSlideById = slideId => {\n    console.log(slideId);\n    console.log(slideIdxDict);\n    let r = slideIdxDict[slideId];\n    setCurrentSlide(r);\n  };\n  const stylesFromVariables = variables => {\n    let styles = {};\n    for (let i = 0; i < variables.length; i++) {\n      let category = variables[i].category;\n      if (category !== \"command\") continue;\n      let variableName = variables[i].idVariable;\n      let currentStyle = {};\n      for (let j = 0; j < variables[i].style.length; j++) {\n        let style = variables[i].style[j];\n        let [property, value] = style.split(\":\");\n        currentStyle[property.trim()] = value.trim();\n      }\n      styles[variableName] = currentStyle;\n    }\n    return styles;\n  };\n  const isTextVariables = (variablesIds, variables) => {\n    var var_with_text = [];\n    variables.forEach(element => {\n      if (variablesIds.includes(element.idVariable)) {\n        if (element.text.trim() != \"\") var_with_text.push(element);\n      }\n    });\n    return var_with_text.length > 0;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Demo\",\n    children: data.slides.length + data.variables.length === 0 ? /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"page-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            width: \"75%\"\n          },\n          className: \"presentation-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: data.slides[currentSlide].text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 76\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            width: \"25%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"slideshow-container\",\n          children: /*#__PURE__*/_jsxDEV(SourceCode, {\n            slide: data.slides[currentSlide],\n            style: stylesFromVariables(data.variables)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 19\n        }, this), data.slides[currentSlide].variables.length > 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"annotations-container\",\n          children: isTextVariables(data.slides[currentSlide].variables, data.variables) ? /*#__PURE__*/_jsxDEV(Annotations, {\n            variables: data.variables,\n            currentVariables: data.slides[currentSlide].variables,\n            style: stylesFromVariables(data.variables)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"navigation-container\",\n          children: /*#__PURE__*/_jsxDEV(Navigation, {\n            order: data.order,\n            slideChanger: setSlideById\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(Demo, \"J2NrkUkwHtULEL3ec+fb2gyADEU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Demo;\nexport default Demo;\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["React","useEffect","useState","Annotations","SourceCode","Navigation","Loading","StyledHTML","useParams","useNavigate","jsxDEV","_jsxDEV","BASE_URL","process","env","REACT_APP_BASE_URL","EXPRESS_PORT","REACT_APP_EXPRESS_PORT","Demo","_s","data","setData","id","navigate","currentSlide","setCurrentSlide","slideIdxDict","setSlideIdxDict","fetch","then","res","json","info","slides","catch","error","console","log","message","defSlideIdxDict","sID","i","length","idSlide","setFirstSlide","order","rearrangeOrder","jsonString","replace","dataStructure","JSON","parse","handleSlideChange","slideIndex","r","setSlideById","slideId","stylesFromVariables","variables","styles","category","variableName","idVariable","currentStyle","j","style","property","value","split","trim","isTextVariables","variablesIds","var_with_text","forEach","element","includes","text","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","slide","currentVariables","slideChanger","_c","$RefreshReg$"],"sources":["/home/yakari144/UM/5ano/tese/StepwiseSource/client/src/pages/Demo.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Annotations from '../components/Annotation';\nimport SourceCode from '../components/SourceCode';\nimport Navigation from '../components/Navigation';\nimport Loading from '../components/Loading';\nimport StyledHTML from '../components/StyledHTML';\nimport './Demo.css';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost\";\nconst EXPRESS_PORT = process.env.REACT_APP_EXPRESS_PORT || \"50741\";\n\nfunction Demo() {\n  var [data, setData] = useState({\n    \"variables\":[],\n    \"slides\":[],\n    \"order\":[]\n  });\n\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  var [currentSlide, setCurrentSlide] = useState(3);\n  var [slideIdxDict, setSlideIdxDict] = useState({});\n\n  useEffect(() => {\n    fetch(BASE_URL + \":\" + EXPRESS_PORT + \"/api/\" + id)\n      .then((res) => res.json())\n      .then((info) => {\n        if (!info.slides) {\n          navigate(\"/error\");\n        } else {\n          // set the data to the info received\n          setData(info);\n        }\n      })\n      .catch((error) => console.log(error.message));\n  }, [id, navigate]);\n  \n  // Set the slideIdxDict and the first slide when data changes\n  useEffect(() => {\n    const defSlideIdxDict = () => {\n      let sID = {};\n      for (let i = 0; i < data.slides.length; i++) {\n        sID[data.slides[i].idSlide] = i;\n      }\n      return sID;\n    };\n\n    if (data && data.slides) {\n      setSlideIdxDict(defSlideIdxDict());\n    }\n  }, [data]); // Trigger this effect when `data` changes\n  \n  // Set the first slide of the presentation according to the order\n  useEffect(() => {\n    const setFirstSlide = (order) => {\n      if (order && order[0]) {\n        if (typeof order[0] === \"string\") {\n          setCurrentSlide(slideIdxDict[order[0]]);\n          console.log(\"First slide: \", order[0], slideIdxDict);\n        } else {\n          setFirstSlide(order[0][0]);\n        }\n      }\n    };\n\n    setFirstSlide(data.order);\n  }, [data]);\n  \n  const rearrangeOrder = (order) => {\n    const jsonString = order.replace(/'/g, '\"');\n    const dataStructure = JSON.parse(jsonString);\n    data.order = dataStructure;\n    setData(data);\n    setFirstSlide(dataStructure)\n  }\n\n  const handleSlideChange = (slideIndex) => {\n    let r = slideIndex+currentSlide\n    if(r<0){\n      r = 0\n    }else if(r>=data.slides.length){\n      r = data.slides.length-1\n    }\n    setCurrentSlide(r)\n  }\n\n  const setSlideById = (slideId) => {\n    console.log(slideId)\n    console.log(slideIdxDict)\n    let r = slideIdxDict[slideId]\n    setCurrentSlide(r)\n  }\n\n  const stylesFromVariables = (variables) => {\n    let styles = {}\n    for (let i = 0; i < variables.length; i++) {\n      let category = variables[i].category\n      if (category !== \"command\")\n        continue\n      let variableName = variables[i].idVariable\n      let currentStyle = {}\n      for (let j = 0; j < variables[i].style.length; j++) {\n        let style = variables[i].style[j]\n        let [property,value] = style.split(\":\")\n        currentStyle[property.trim()] = value.trim()\n      }\n      styles[variableName] = currentStyle\n    }\n    return styles\n  }\n\n  const isTextVariables = (variablesIds,variables) => {\n    var var_with_text = [];\n    variables.forEach(element => {\n      if(variablesIds.includes(element.idVariable)){\n        if(element.text.trim() != \"\")\n          var_with_text.push(element)\n      }\n    });\n    return var_with_text.length > 0\n  }\n\n  return (\n    <div className=\"Demo\">\n        {(data.slides.length + data.variables.length === 0) ? (\n            <header className=\"App-header\">\n                <Loading />\n            </header>\n        ) : (\n            <table className=\"page-table\">\n                <tr>\n                  <th style={{width:\"75%\"}} className=\"presentation-title\"><h1>{data.slides[currentSlide].text}</h1></th>\n                  <th style={{width:\"25%\"}}></th>\n                </tr>\n                <tr>\n                  <td className=\"slideshow-container\">\n                    <SourceCode slide = {data.slides[currentSlide]} style={stylesFromVariables(data.variables)} />\n                  </td>\n                  { data.slides[currentSlide].variables.length > 0 &&\n                  <td className=\"annotations-container\">{\n                    (isTextVariables(data.slides[currentSlide].variables,data.variables)) ? (\n                    <Annotations variables = {data.variables} currentVariables = {data.slides[currentSlide].variables} style={stylesFromVariables(data.variables)} /> \n                    ):(null)\n                    }\n                  </td>\n                  }\n                </tr>\n                <tr>\n                  <td className=\"navigation-container\">\n                    <Navigation order={data.order} slideChanger={setSlideById}/>\n                  </td>\n                  <td></td>\n                </tr>\n            </table>\n        )}\n    </div>\n  );\n}\n\nexport default Demo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}